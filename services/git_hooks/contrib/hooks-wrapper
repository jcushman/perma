#!/usr/bin/env bash

# via https://github.com/sjungwirth/githooks/blob/master/bin/git/hooks-wrapper

# Runs all executable pre-commit-* hooks and exits after,
# if any of them was not successful.
#
# Based on
# https://github.com/ELLIOTTCABLE/Paws.js/blob/Master/Scripts/git-hooks/chain-hooks.sh
# http://osdir.com/ml/git/2009-01/msg00308.html

exitcodes=()
hookname=`basename $0`
# our special hooks folder
CUSTOM_HOOKS_DIR=$(git rev-parse --show-toplevel)/services/git_hooks
# find gits native hooks folder
NATIVE_HOOKS_DIR=$(git rev-parse --show-toplevel)/.git/hooks

# Run each hook, passing through STDIN and storing the exit code.
# We don't want to bail at the first failure, as the user might
# then bypass the hooks without knowing about additional issues.

for hook in $CUSTOM_HOOKS_DIR/$hookname-*; do
  test -x "$hook" || continue
  echo "Calling $hook ..."
  out=`$hook "$@"`
  exitcodes+=($?)
  echo "$out" | sed 's/^/  /'
  if [ "${exitcodes[@]: -1}" == 0 ]; then
    echo "Done."
  else
    echo "Failed!"
  fi
done

# check if there was a local hook that was moved previously
if [ -f "$NATIVE_HOOKS_DIR/$hookname.local" ]; then
    out=`$NATIVE_HOOKS_DIR/$hookname.local "$@"`
    exitcodes+=($?)
    echo "$out"
fi

# If any exit code isn't 0, bail.
for i in "${exitcodes[@]}"; do
  [ "$i" == 0 ] || exit $i
done